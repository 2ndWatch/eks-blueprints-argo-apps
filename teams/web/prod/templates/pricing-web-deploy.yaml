apiVersion: v1
kind: Service
metadata:
  name: pricing-web-preview
  labels:
    app: pricing-web-preview
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
    prometheus.io/port: '80'
spec:
  clusterIP: None
  ports:
  - port: 16666
  selector:
    app: pricing-web
---
apiVersion: v1
kind: Service
metadata:
  name: pricing-web
  labels:
    app: pricing-web
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
    prometheus.io/port: '80'
spec:
  clusterIP: None
  ports:
  - port: 16666
  selector:
    app: pricing-web
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: pricing-ui
#   labels:
#     app: pricing-web
# spec:
#   ports:
#     - name: query-http
#       port: 80
#       protocol: TCP
#       targetPort: 80
#   selector:
#     app: pricing-web
#   type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pricing-ui
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=600
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=60
spec:
  ingressClassName: alb
  rules:
  - http:
      host: preview-akka-cqrs
      paths:
      - path: /blue/
        pathType: Prefix
        backend:
          service:
            name: pricing-web-preview
            port:
              number: 16666
  - http:
      paths:
      - path: /green/
        pathType: Prefix
        backend:
          service:
            name: pricing-web
            port:
              number: 16666
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: pricing-web
  labels:
    app: pricing-web
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: pricing-web
  strategy:
    blueGreen:
      activeService: pricing-web
      previewService: pricing-web-preview
      autoPromotionEnabled: false
  template:
    metadata:
      labels:
        app: pricing-web
    spec:
      terminationGracePeriodSeconds: 35
      containers:
      - name: pricing-web
        image: "{{ .Values.ecr.registry }}/akka.cqrs.pricing.web:0.2.1"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CLUSTER_IP
          value: "$(POD_NAME).pricing-web.team-web.svc.cluster.local"
        - name: CLUSTER_SEEDS
          value: akka.tcp://AkkaTrader@pricing-0.pricing.akka-cqrs.svc.cluster.local:5110,akka.tcp://AkkaTrader@pricing-1.pricing.akka-cqrs.svc.cluster.local:5110,akka.tcp://AkkaTrader@pricing-2.pricing.akka-cqrs.svc.cluster.local:5110
        - name: CLUSTER_PORT
          value: "16666"
        - name: ENABLE_PHOBOS
          value: "true"
        - name: STATSD_PORT
          value: "8125"
        - name: STATSD_URL
          value: "statsd-agent"
        - name: JAEGER_AGENT_HOST
          value: "jaeger-agent"
        - name: ASPNETCORE_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: pb-configs
              key: environment
        livenessProbe:
          tcpSocket:
            port: 16666
        readinessProbe:
          httpGet:
            path: "/"
            port: 80
          initialDelaySeconds: 30
        ports:
        - containerPort: 16666
          protocol: TCP
        - containerPort: 80
          protocol: TCP